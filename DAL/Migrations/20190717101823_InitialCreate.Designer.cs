// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(AHPContext))]
    [Migration("20190717101823_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Alternative", b =>
                {
                    b.Property<int>("AlternativeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlternativeName");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<float>("GlobalPriority");

                    b.Property<int?>("GoalId");

                    b.HasKey("AlternativeId");

                    b.HasIndex("GoalId");

                    b.ToTable("Alternatives");
                });

            modelBuilder.Entity("DAL.Criterium", b =>
                {
                    b.Property<int>("CriteriumId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CriteriumName");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<float>("GlobalCriteriumPriority");

                    b.Property<int?>("GoalId");

                    b.HasKey("CriteriumId");

                    b.HasIndex("GoalId");

                    b.ToTable("Criteriums");
                });

            modelBuilder.Entity("DAL.Criterium_Alternative", b =>
                {
                    b.Property<int>("CriteriumId");

                    b.Property<int>("AlternativeId");

                    b.Property<float>("LocalPriority");

                    b.HasKey("CriteriumId", "AlternativeId");

                    b.HasAlternateKey("AlternativeId", "CriteriumId");

                    b.ToTable("Criterium_Alternatives");
                });

            modelBuilder.Entity("DAL.Goal", b =>
                {
                    b.Property<int>("GoalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("GoalName");

                    b.HasKey("GoalId");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("DAL.Alternative", b =>
                {
                    b.HasOne("DAL.Goal")
                        .WithMany("Alternatives")
                        .HasForeignKey("GoalId");
                });

            modelBuilder.Entity("DAL.Criterium", b =>
                {
                    b.HasOne("DAL.Goal")
                        .WithMany("Criteriums")
                        .HasForeignKey("GoalId");
                });

            modelBuilder.Entity("DAL.Criterium_Alternative", b =>
                {
                    b.HasOne("DAL.Alternative", "alternative")
                        .WithMany("criterium_alternatives")
                        .HasForeignKey("AlternativeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Criterium", "criterium")
                        .WithMany("criterium_alternatives")
                        .HasForeignKey("CriteriumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
